{
	// ==========================================================================
	// GENERAL & UI SETTINGS
	// ==========================================================================
	"suggest.autoTrigger": "always",
	"suggest.noselect": false,
	"suggest.completionItemKindLabels": {
		"function": "∆í",
		"method": "m",
		"variable": "ùí±",
		"field": "‚®Ä",
		"class": "ùìí",
		"interface": "ùêº",
		"struct": "ùì¢",
		"enum": "Œµ",
		"enumMember": "‚Ä¢",
		"keyword": "Œ∫",
		"property": "œÅ",
		"value": "ŒΩ",
		"event": "e",
		"operator": "œÄ",
		"module": "ùìú",
		"constant": "C",
		"constructor": "ctor",
		"text": "t",
		"file": "f",
		"folder": "ùêπ",
		"color": "üé®",
		"unit": "Œº",
		"snippet": "ùë∫",
		"typeParameter": "ùëá",
		"reference": "‚Ñõ"
	},
	"diagnostic.virtualText": true,
	"diagnostic.virtualTextCurrentLineOnly": false,
	"diagnostic.virtualTextPrefix": "  ",
	"diagnostic.checkCurrentLine": true,
	"workspace.workspaceFolderCheckCwd": true,
	"hover.target": "preview",
	"codeLens.enable": true,
	"signature.enable": true,
	// ==========================================================================
	// LANGUAGE SERVER SETTINGS (via coc-extensions)
	// ==========================================================================
	// Most language servers are now managed by their own extensions.
	// Install them with `:CocInstall coc-pyright coc-go coc-terraform-ls coc-json coc-yaml ...`
	// The `languageserver` block is best used for servers WITHOUT a dedicated Coc extension.
	// --------------------------------------------------------------------------
	// Python (coc-pyright) - Replaces the deprecated coc-python
	// --------------------------------------------------------------------------
	"python.analysis.autoImportCompletions": true,
	"python.analysis.diagnosticMode": "openFilesOnly",
	"python.analysis.typeCheckingMode": "basic",
	"python.formatting.provider": "black",
	"python.linting.flake8Enabled": true,
	"python.linting.flake8Args": [
		"--ignore=F821,E302,E501"
	],
	"python.linting.pylintEnabled": false,
	// For venv management, coc-pyright automatically detects the environment in your
	// workspace (e.g., .venv, venv). For more complex setups, configure it in
	// your project's `pyrightconfig.json` for better portability.
	// "python.pythonPath": "/path/to/your/venv/bin/python",
	// --------------------------------------------------------------------------
	// Go (coc-go)
	// --------------------------------------------------------------------------
	"go.goplsOptions": {
		"completeUnimported": true,
		"staticcheck": true,
		"codelenses": {
			"test": true,
			"tidy": true
		},
		"linksInHover": true
	},
	// --------------------------------------------------------------------------
	// Terraform (coc-terraform-ls)
	// --------------------------------------------------------------------------
	// No specific coc-settings.json are usually needed for coc-terraform-ls.
	// It works out-of-the-box assuming `terraform-ls` is in your $PATH.
	// --------------------------------------------------------------------------
	// JSON (coc-json)
	// --------------------------------------------------------------------------
	"json.format.enable": true,
	"json.validate.enable": true,
	"json.schemas": [
		{
			"fileMatch": [
				"package.json"
			],
			"url": "https://json.schemastore.org/package.json"
		}
	],
	// --------------------------------------------------------------------------
	// YAML (coc-yaml)
	// --------------------------------------------------------------------------
	"yaml.format.enable": true,
	"yaml.validate": true,
	"yaml.schemaStore.enable": true,
	"yaml.schemas": {
		"https://json.schemastore.org/github-workflow.json": "/.github/workflows/*",
		"https://raw.githubusercontent.com/compose-spec/compose-spec/master/schema/compose-spec.json": [
			"docker-compose.yml",
			"docker-compose.*.yml"
		],
		"kubernetes": [
			"*.k8s.yaml",
			"*.kubernetes.yaml"
		]
	},
	// --------------------------------------------------------------------------
	// Snippets (coc-snippets)
	// --------------------------------------------------------------------------
	"snippets.autoTrigger": true
	// The "snippets.ultisnips.enable": false is only needed if you have UltiSnips installed
	// and want to prevent coc-snippets from loading its snippets.
}
